CCS PCM C Compiler, Version 5.101, 43599               16-Mar-22 15:11

               Filename:   C:\Users\Admin\Documents\Micro\main.lst

               ROM used:   125 words (2%)
                           Largest free fragment is 2048
               RAM used:   7 (2%) at main() level
                           7 (2%) worst case
               Stack used: 1 locations
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   03C
0003:  NOP
.................... #include <16F887.h>
.................... //////////// Standard Header file for the PIC16F887 device ////////////////
.................... ///////////////////////////////////////////////////////////////////////////
.................... ////        (C) Copyright 1996, 2020 Custom Computer Services          ////
.................... //// This source code may only be used by licensed users of the CCS C  ////
.................... //// compiler.  This source code may only be distributed to other      ////
.................... //// licensed users of the CCS C compiler.  No other use, reproduction ////
.................... //// or distribution is permitted without written permission.          ////
.................... //// Derivative programs created using this software in object code    ////
.................... //// form are not restricted in any way.                               ////
.................... ///////////////////////////////////////////////////////////////////////////
.................... #device PIC16F887
.................... 
.................... #list
.................... 
.................... #FUSES NOWDT, PUT, HS, NOPROTECT, NOLVP
.................... #USE DELAY(CLOCK=20M)
0004:  MOVLW  22
0005:  MOVWF  04
0006:  BCF    03.7
0007:  MOVF   00,W
0008:  BTFSC  03.2
0009:  GOTO   017
000A:  MOVLW  06
000B:  MOVWF  78
000C:  CLRF   77
000D:  DECFSZ 77,F
000E:  GOTO   00D
000F:  DECFSZ 78,F
0010:  GOTO   00C
0011:  MOVLW  7B
0012:  MOVWF  77
0013:  DECFSZ 77,F
0014:  GOTO   013
0015:  DECFSZ 00,F
0016:  GOTO   00A
0017:  RETURN
.................... 
.................... led5hz()
.................... {
....................    output_d(0x00);
0018:  BSF    03.5
0019:  CLRF   08
001A:  BCF    03.5
001B:  CLRF   08
....................    delay_ms(100);
001C:  MOVLW  64
001D:  MOVWF  22
001E:  CALL   004
....................    output_d(0xff);
001F:  BSF    03.5
0020:  CLRF   08
0021:  MOVLW  FF
0022:  BCF    03.5
0023:  MOVWF  08
....................    delay_ms(100);
0024:  MOVLW  64
0025:  MOVWF  22
0026:  CALL   004
0027:  BCF    0A.3
0028:  BCF    0A.4
0029:  GOTO   058 (RETURN)
.................... }
.................... 
.................... led10hz()
.................... {
....................    output_d(0x00);
002A:  BSF    03.5
002B:  CLRF   08
002C:  BCF    03.5
002D:  CLRF   08
....................    delay_ms(50);
002E:  MOVLW  32
002F:  MOVWF  22
0030:  CALL   004
....................    output_d(0xff);
0031:  BSF    03.5
0032:  CLRF   08
0033:  MOVLW  FF
0034:  BCF    03.5
0035:  MOVWF  08
....................    delay_ms(50);
0036:  MOVLW  32
0037:  MOVWF  22
0038:  CALL   004
0039:  BCF    0A.3
003A:  BCF    0A.4
003B:  GOTO   06B (RETURN)
.................... }
.................... void main()
003C:  MOVF   03,W
003D:  ANDLW  1F
003E:  MOVWF  03
003F:  BSF    03.5
0040:  BSF    03.6
0041:  MOVF   09,W
0042:  ANDLW  C0
0043:  MOVWF  09
0044:  BCF    03.6
0045:  BCF    1F.4
0046:  BCF    1F.5
0047:  MOVLW  00
0048:  BSF    03.6
0049:  MOVWF  08
004A:  BCF    03.5
004B:  CLRF   07
004C:  CLRF   08
004D:  CLRF   09
004E:  BCF    03.7
.................... {
....................    set_tris_d(0x00);
004F:  MOVLW  00
0050:  BSF    03.5
0051:  BCF    03.6
0052:  MOVWF  08
....................    int1 temp=1;
0053:  BCF    03.5
0054:  BSF    21.0
....................    while(true)
....................    {
....................       if(temp==1)
0055:  BTFSS  21.0
0056:  GOTO   068
....................          {
....................          led5hz();
0057:  GOTO   018
....................          if(!input(pin_A0))
0058:  BSF    03.5
0059:  BSF    05.0
005A:  BCF    03.5
005B:  BTFSC  05.0
005C:  GOTO   060
....................          delay_ms(100);
005D:  MOVLW  64
005E:  MOVWF  22
005F:  CALL   004
....................          if(!input(pin_A0))
0060:  BSF    03.5
0061:  BSF    05.0
0062:  BCF    03.5
0063:  BTFSC  05.0
0064:  GOTO   067
....................            {temp=0;}
0065:  BCF    21.0
0066:  GOTO   068
....................             else
....................             {temp=1;}
0067:  BSF    21.0
....................          }
....................       if(temp==0)
0068:  BTFSC  21.0
0069:  GOTO   07B
....................          {
....................          led10hz();
006A:  GOTO   02A
....................          if(!input(pin_A0))
006B:  BSF    03.5
006C:  BSF    05.0
006D:  BCF    03.5
006E:  BTFSC  05.0
006F:  GOTO   073
....................          delay_ms(100);
0070:  MOVLW  64
0071:  MOVWF  22
0072:  CALL   004
....................          if(!input(pin_A0))
0073:  BSF    03.5
0074:  BSF    05.0
0075:  BCF    03.5
0076:  BTFSC  05.0
0077:  GOTO   07A
....................            {temp=1;}
0078:  BSF    21.0
0079:  GOTO   07B
....................             else 
....................            {temp=0;}
007A:  BCF    21.0
....................          }
007B:  GOTO   055
....................    }
.................... }
007C:  SLEEP

Configuration Fuses:
   Word  1: 2FE2   HS NOWDT PUT MCLR NOPROTECT NOCPD BROWNOUT IESO FCMEN NOLVP NODEBUG
   Word  2: 3FFF   BORV40 NOWRT
