CCS PCM C Compiler, Version 5.101, 43599               06-Apr-22 16:52

               Filename:   C:\Users\Admin\Documents\Micro\Midterm Test\Midterm_test.lst

               ROM used:   643 words (8%)
                           Largest free fragment is 2048
               RAM used:   11 (3%) at main() level
                           16 (4%) worst case
               Stack used: 2 locations
               Stack size: 8

*
0000:  MOVLW  02
0001:  MOVWF  0A
0002:  GOTO   24A
0003:  NOP
.................... #include <16F887.h>
.................... //////////// Standard Header file for the PIC16F887 device ////////////////
.................... ///////////////////////////////////////////////////////////////////////////
.................... ////        (C) Copyright 1996, 2020 Custom Computer Services          ////
.................... //// This source code may only be used by licensed users of the CCS C  ////
.................... //// compiler.  This source code may only be distributed to other      ////
.................... //// licensed users of the CCS C compiler.  No other use, reproduction ////
.................... //// or distribution is permitted without written permission.          ////
.................... //// Derivative programs created using this software in object code    ////
.................... //// form are not restricted in any way.                               ////
.................... ///////////////////////////////////////////////////////////////////////////
.................... #device PIC16F887
*
012D:  CLRF   78
012E:  CLRF   79
012F:  CLRF   77
0130:  CLRF   7A
0131:  MOVF   29,W
0132:  BTFSS  03.2
0133:  GOTO   137
0134:  MOVF   28,W
0135:  BTFSC  03.2
0136:  GOTO   151
0137:  MOVLW  10
0138:  MOVWF  2A
0139:  BCF    03.0
013A:  RLF    26,F
013B:  RLF    27,F
013C:  RLF    77,F
013D:  RLF    7A,F
013E:  MOVF   29,W
013F:  SUBWF  7A,W
0140:  BTFSS  03.2
0141:  GOTO   144
0142:  MOVF   28,W
0143:  SUBWF  77,W
0144:  BTFSS  03.0
0145:  GOTO   14D
0146:  MOVF   28,W
0147:  SUBWF  77,F
0148:  BTFSS  03.0
0149:  DECF   7A,F
014A:  MOVF   29,W
014B:  SUBWF  7A,F
014C:  BSF    03.0
014D:  RLF    78,F
014E:  RLF    79,F
014F:  DECFSZ 2A,F
0150:  GOTO   139
0151:  RETURN
.................... 
.................... #list
.................... 
.................... #FUSES NOWDT, PUT, HS, NOPROTECT, NOLVP
.................... #USE DELAY(CLOCK=20M)
*
0004:  MOVLW  29
0005:  MOVWF  04
0006:  BCF    03.7
0007:  MOVF   00,W
0008:  BTFSC  03.2
0009:  GOTO   017
000A:  MOVLW  06
000B:  MOVWF  78
000C:  CLRF   77
000D:  DECFSZ 77,F
000E:  GOTO   00D
000F:  DECFSZ 78,F
0010:  GOTO   00C
0011:  MOVLW  7B
0012:  MOVWF  77
0013:  DECFSZ 77,F
0014:  GOTO   013
0015:  DECFSZ 00,F
0016:  GOTO   00A
0017:  RETURN
.................... #define RS pin_e0
.................... #define RW pin_e1
.................... #define E  pin_e2
.................... unsigned int16 i,temp=1,count=0;
.................... void lcd_command(unsigned int8 cm)
....................    {
....................       output_low(RW);
0018:  BSF    03.5
0019:  BCF    09.1
001A:  BCF    03.5
001B:  BCF    09.1
....................       output_low(RS);
001C:  BSF    03.5
001D:  BCF    09.0
001E:  BCF    03.5
001F:  BCF    09.0
....................       output_d(cm);
0020:  BSF    03.5
0021:  CLRF   08
0022:  BCF    03.5
0023:  MOVF   26,W
0024:  MOVWF  08
....................       output_low(e);
0025:  BSF    03.5
0026:  BCF    09.2
0027:  BCF    03.5
0028:  BCF    09.2
....................       output_high(e);
0029:  BSF    03.5
002A:  BCF    09.2
002B:  BCF    03.5
002C:  BSF    09.2
....................       delay_ms(1);
002D:  MOVLW  01
002E:  MOVWF  29
002F:  CALL   004
0030:  RETURN
....................    }
.................... void lcd_data(unsigned int8 dt)
....................    {
....................       output_low(RW);
*
0049:  BSF    03.5
004A:  BCF    09.1
004B:  BCF    03.5
004C:  BCF    09.1
....................       output_high(RS);
004D:  BSF    03.5
004E:  BCF    09.0
004F:  BCF    03.5
0050:  BSF    09.0
....................       output_d(dt);
0051:  BSF    03.5
0052:  CLRF   08
0053:  BCF    03.5
0054:  MOVF   28,W
0055:  MOVWF  08
....................       output_low(e);
0056:  BSF    03.5
0057:  BCF    09.2
0058:  BCF    03.5
0059:  BCF    09.2
....................       output_high(e);      
005A:  BSF    03.5
005B:  BCF    09.2
005C:  BCF    03.5
005D:  BSF    09.2
....................       delay_ms(1);
005E:  MOVLW  01
005F:  MOVWF  29
0060:  CALL   004
0061:  RETURN
....................    }
.................... void lcd_setup()
....................    {
....................       delay_ms(5);
*
0031:  MOVLW  05
0032:  MOVWF  29
0033:  CALL   004
....................       lcd_command(0x38);
0034:  MOVLW  38
0035:  MOVWF  26
0036:  CALL   018
....................       delay_ms(5);
0037:  MOVLW  05
0038:  MOVWF  29
0039:  CALL   004
....................       lcd_command(0x0C);
003A:  MOVLW  0C
003B:  MOVWF  26
003C:  CALL   018
....................       lcd_command(0x06);
003D:  MOVLW  06
003E:  MOVWF  26
003F:  CALL   018
....................       lcd_command(0x01);
0040:  MOVLW  01
0041:  MOVWF  26
0042:  CALL   018
....................       delay_ms(2);
0043:  MOVLW  02
0044:  MOVWF  29
0045:  CALL   004
0046:  BCF    0A.3
0047:  BCF    0A.4
0048:  GOTO   26E (RETURN)
....................    }
.................... void mode1()
....................    {
....................       lcd_command(0x01);delay_ms(100);
*
0062:  MOVLW  01
0063:  MOVWF  26
0064:  CALL   018
0065:  MOVLW  64
0066:  MOVWF  29
0067:  CALL   004
....................       lcd_command(0x38);
0068:  MOVLW  38
0069:  MOVWF  26
006A:  CALL   018
....................       // Name
....................       lcd_command(0x81);lcd_data(0x54);delay_ms(10); 
006B:  MOVLW  81
006C:  MOVWF  26
006D:  CALL   018
006E:  MOVLW  54
006F:  MOVWF  28
0070:  CALL   049
0071:  MOVLW  0A
0072:  MOVWF  29
0073:  CALL   004
....................       lcd_command(0x82);lcd_data(0x72);delay_ms(10);
0074:  MOVLW  82
0075:  MOVWF  26
0076:  CALL   018
0077:  MOVLW  72
0078:  MOVWF  28
0079:  CALL   049
007A:  MOVLW  0A
007B:  MOVWF  29
007C:  CALL   004
....................       lcd_command(0x83);lcd_data(0x61);delay_ms(10);
007D:  MOVLW  83
007E:  MOVWF  26
007F:  CALL   018
0080:  MOVLW  61
0081:  MOVWF  28
0082:  CALL   049
0083:  MOVLW  0A
0084:  MOVWF  29
0085:  CALL   004
....................       lcd_command(0x84);lcd_data(0x6E);delay_ms(10);
0086:  MOVLW  84
0087:  MOVWF  26
0088:  CALL   018
0089:  MOVLW  6E
008A:  MOVWF  28
008B:  CALL   049
008C:  MOVLW  0A
008D:  MOVWF  29
008E:  CALL   004
....................       lcd_command(0x86);lcd_data(0x4D);delay_ms(10);
008F:  MOVLW  86
0090:  MOVWF  26
0091:  CALL   018
0092:  MOVLW  4D
0093:  MOVWF  28
0094:  CALL   049
0095:  MOVLW  0A
0096:  MOVWF  29
0097:  CALL   004
....................       lcd_command(0x87);lcd_data(0x69);delay_ms(10);
0098:  MOVLW  87
0099:  MOVWF  26
009A:  CALL   018
009B:  MOVLW  69
009C:  MOVWF  28
009D:  CALL   049
009E:  MOVLW  0A
009F:  MOVWF  29
00A0:  CALL   004
....................       lcd_command(0x88);lcd_data(0x6E);delay_ms(10);
00A1:  MOVLW  88
00A2:  MOVWF  26
00A3:  CALL   018
00A4:  MOVLW  6E
00A5:  MOVWF  28
00A6:  CALL   049
00A7:  MOVLW  0A
00A8:  MOVWF  29
00A9:  CALL   004
....................       lcd_command(0x89);lcd_data(0x68);delay_ms(10);
00AA:  MOVLW  89
00AB:  MOVWF  26
00AC:  CALL   018
00AD:  MOVLW  68
00AE:  MOVWF  28
00AF:  CALL   049
00B0:  MOVLW  0A
00B1:  MOVWF  29
00B2:  CALL   004
....................       lcd_command(0x8B);lcd_data(0x51);delay_ms(10);
00B3:  MOVLW  8B
00B4:  MOVWF  26
00B5:  CALL   018
00B6:  MOVLW  51
00B7:  MOVWF  28
00B8:  CALL   049
00B9:  MOVLW  0A
00BA:  MOVWF  29
00BB:  CALL   004
....................       lcd_command(0x8C);lcd_data(0x75);delay_ms(10);
00BC:  MOVLW  8C
00BD:  MOVWF  26
00BE:  CALL   018
00BF:  MOVLW  75
00C0:  MOVWF  28
00C1:  CALL   049
00C2:  MOVLW  0A
00C3:  MOVWF  29
00C4:  CALL   004
....................       lcd_command(0x8D);lcd_data(0x61);delay_ms(10);
00C5:  MOVLW  8D
00C6:  MOVWF  26
00C7:  CALL   018
00C8:  MOVLW  61
00C9:  MOVWF  28
00CA:  CALL   049
00CB:  MOVLW  0A
00CC:  MOVWF  29
00CD:  CALL   004
....................       lcd_command(0x8E);lcd_data(0x6E);delay_ms(10);
00CE:  MOVLW  8E
00CF:  MOVWF  26
00D0:  CALL   018
00D1:  MOVLW  6E
00D2:  MOVWF  28
00D3:  CALL   049
00D4:  MOVLW  0A
00D5:  MOVWF  29
00D6:  CALL   004
....................       // ID
....................       lcd_command(0xC4);lcd_data(0x31);delay_ms(10);
00D7:  MOVLW  C4
00D8:  MOVWF  26
00D9:  CALL   018
00DA:  MOVLW  31
00DB:  MOVWF  28
00DC:  CALL   049
00DD:  MOVLW  0A
00DE:  MOVWF  29
00DF:  CALL   004
....................       lcd_command(0xC5);lcd_data(0x39);delay_ms(10);
00E0:  MOVLW  C5
00E1:  MOVWF  26
00E2:  CALL   018
00E3:  MOVLW  39
00E4:  MOVWF  28
00E5:  CALL   049
00E6:  MOVLW  0A
00E7:  MOVWF  29
00E8:  CALL   004
....................       lcd_command(0xC6);lcd_data(0x31);delay_ms(10);
00E9:  MOVLW  C6
00EA:  MOVWF  26
00EB:  CALL   018
00EC:  MOVLW  31
00ED:  MOVWF  28
00EE:  CALL   049
00EF:  MOVLW  0A
00F0:  MOVWF  29
00F1:  CALL   004
....................       lcd_command(0xC7);lcd_data(0x35);delay_ms(10);
00F2:  MOVLW  C7
00F3:  MOVWF  26
00F4:  CALL   018
00F5:  MOVLW  35
00F6:  MOVWF  28
00F7:  CALL   049
00F8:  MOVLW  0A
00F9:  MOVWF  29
00FA:  CALL   004
....................       lcd_command(0xC8);lcd_data(0x31);delay_ms(10);
00FB:  MOVLW  C8
00FC:  MOVWF  26
00FD:  CALL   018
00FE:  MOVLW  31
00FF:  MOVWF  28
0100:  CALL   049
0101:  MOVLW  0A
0102:  MOVWF  29
0103:  CALL   004
....................       lcd_command(0xC9);lcd_data(0x30);delay_ms(10);
0104:  MOVLW  C9
0105:  MOVWF  26
0106:  CALL   018
0107:  MOVLW  30
0108:  MOVWF  28
0109:  CALL   049
010A:  MOVLW  0A
010B:  MOVWF  29
010C:  CALL   004
....................       lcd_command(0xCA);lcd_data(0x37);delay_ms(10);
010D:  MOVLW  CA
010E:  MOVWF  26
010F:  CALL   018
0110:  MOVLW  37
0111:  MOVWF  28
0112:  CALL   049
0113:  MOVLW  0A
0114:  MOVWF  29
0115:  CALL   004
....................       lcd_command(0xCB);lcd_data(0x38);delay_ms(10);
0116:  MOVLW  CB
0117:  MOVWF  26
0118:  CALL   018
0119:  MOVLW  38
011A:  MOVWF  28
011B:  CALL   049
011C:  MOVLW  0A
011D:  MOVWF  29
011E:  CALL   004
....................       check1:
....................       if (!input(pin_a0))
011F:  BSF    03.5
0120:  BCF    03.6
0121:  BSF    05.0
0122:  BCF    03.5
0123:  BTFSC  05.0
0124:  GOTO   129
....................          temp++;
0125:  INCF   22,F
0126:  BTFSC  03.2
0127:  INCF   23,F
0128:  GOTO   12A
....................       else
....................          goto check1;
0129:  GOTO   11F
012A:  BCF    0A.3
012B:  BCF    0A.4
012C:  GOTO   273 (RETURN)
....................     }
.................... void mode2()
....................    {
....................       lcd_command(0x01); delay_ms(100);
*
0152:  MOVLW  01
0153:  MOVWF  26
0154:  CALL   018
0155:  MOVLW  64
0156:  MOVWF  29
0157:  CALL   004
....................       for (i=count;(i<1000 && temp==2);i++)
0158:  MOVF   25,W
0159:  MOVWF  21
015A:  MOVF   24,W
015B:  MOVWF  20
015C:  MOVF   21,W
015D:  SUBLW  03
015E:  BTFSS  03.0
015F:  GOTO   1CA
0160:  BTFSS  03.2
0161:  GOTO   166
0162:  MOVF   20,W
0163:  SUBLW  E7
0164:  BTFSS  03.0
0165:  GOTO   1CA
0166:  MOVF   22,W
0167:  SUBLW  02
0168:  BTFSS  03.2
0169:  GOTO   1CA
016A:  MOVF   23,F
016B:  BTFSS  03.2
016C:  GOTO   1CA
....................          {
....................             lcd_command(0x80);lcd_data(i/100 + 0x30);
016D:  MOVLW  80
016E:  MOVWF  26
016F:  CALL   018
0170:  MOVF   21,W
0171:  MOVWF  27
0172:  MOVF   20,W
0173:  MOVWF  26
0174:  CLRF   29
0175:  MOVLW  64
0176:  MOVWF  28
0177:  CALL   12D
0178:  MOVF   79,W
0179:  MOVWF  27
017A:  MOVF   78,W
017B:  MOVWF  26
017C:  MOVLW  30
017D:  ADDWF  26,F
017E:  BTFSC  03.0
017F:  INCF   27,F
0180:  MOVF   26,W
0181:  MOVWF  28
0182:  CALL   049
....................             lcd_command(0x88);lcd_data(i/10 + 0x30);
0183:  MOVLW  88
0184:  MOVWF  26
0185:  CALL   018
0186:  MOVF   21,W
0187:  MOVWF  27
0188:  MOVF   20,W
0189:  MOVWF  26
018A:  CLRF   29
018B:  MOVLW  0A
018C:  MOVWF  28
018D:  CALL   12D
018E:  MOVF   79,W
018F:  MOVWF  27
0190:  MOVF   78,W
0191:  MOVWF  26
0192:  MOVLW  30
0193:  ADDWF  26,F
0194:  BTFSC  03.0
0195:  INCF   27,F
0196:  MOVF   26,W
0197:  MOVWF  28
0198:  CALL   049
....................             lcd_command(0x8F);lcd_data(i%10 + 0x30);
0199:  MOVLW  8F
019A:  MOVWF  26
019B:  CALL   018
019C:  MOVF   21,W
019D:  MOVWF  27
019E:  MOVF   20,W
019F:  MOVWF  26
01A0:  CLRF   29
01A1:  MOVLW  0A
01A2:  MOVWF  28
01A3:  CALL   12D
01A4:  MOVF   77,W
01A5:  MOVWF  26
01A6:  MOVF   7A,W
01A7:  MOVWF  27
01A8:  MOVLW  30
01A9:  ADDWF  26,F
01AA:  BTFSC  03.0
01AB:  INCF   27,F
01AC:  MOVF   26,W
01AD:  MOVWF  28
01AE:  CALL   049
....................             if (i==999)
01AF:  MOVF   20,W
01B0:  SUBLW  E7
01B1:  BTFSS  03.2
01B2:  GOTO   1BA
01B3:  MOVF   21,W
01B4:  SUBLW  03
01B5:  BTFSS  03.2
01B6:  GOTO   1BA
....................                {i=-1;}
01B7:  MOVLW  FF
01B8:  MOVWF  21
01B9:  MOVWF  20
....................             if (!input(pin_a0))
01BA:  BSF    03.5
01BB:  BSF    05.0
01BC:  BCF    03.5
01BD:  BTFSC  05.0
01BE:  GOTO   1C6
....................                {
....................                temp++;
01BF:  INCF   22,F
01C0:  BTFSC  03.2
01C1:  INCF   23,F
....................                count=i;
01C2:  MOVF   21,W
01C3:  MOVWF  25
01C4:  MOVF   20,W
01C5:  MOVWF  24
....................                }
01C6:  INCF   20,F
01C7:  BTFSC  03.2
01C8:  INCF   21,F
01C9:  GOTO   15C
....................          }
01CA:  BCF    0A.3
01CB:  BCF    0A.4
01CC:  GOTO   27A (RETURN)
.................... 
....................    }
.................... void mode3()
....................    {  
....................       lcd_command(0x01); delay_ms(100);
01CD:  MOVLW  01
01CE:  MOVWF  26
01CF:  CALL   018
01D0:  MOVLW  64
01D1:  MOVWF  29
01D2:  CALL   004
....................       lcd_command(0x38);
01D3:  MOVLW  38
01D4:  MOVWF  26
01D5:  CALL   018
....................       for (i=count;(i>0 && temp==3);i--)
01D6:  MOVF   25,W
01D7:  MOVWF  21
01D8:  MOVF   24,W
01D9:  MOVWF  20
01DA:  MOVF   20,F
01DB:  BTFSS  03.2
01DC:  GOTO   1E0
01DD:  MOVF   21,F
01DE:  BTFSC  03.2
01DF:  GOTO   247
01E0:  MOVF   22,W
01E1:  SUBLW  03
01E2:  BTFSS  03.2
01E3:  GOTO   247
01E4:  MOVF   23,F
01E5:  BTFSS  03.2
01E6:  GOTO   247
....................          {
....................             lcd_command(0xC0);lcd_data(i/100 + 0x30);
01E7:  MOVLW  C0
01E8:  MOVWF  26
01E9:  CALL   018
01EA:  MOVF   21,W
01EB:  MOVWF  27
01EC:  MOVF   20,W
01ED:  MOVWF  26
01EE:  CLRF   29
01EF:  MOVLW  64
01F0:  MOVWF  28
01F1:  CALL   12D
01F2:  MOVF   79,W
01F3:  MOVWF  27
01F4:  MOVF   78,W
01F5:  MOVWF  26
01F6:  MOVLW  30
01F7:  ADDWF  26,F
01F8:  BTFSC  03.0
01F9:  INCF   27,F
01FA:  MOVF   26,W
01FB:  MOVWF  28
01FC:  CALL   049
....................             lcd_command(0xC8);lcd_data(i/10 + 0x30);
01FD:  MOVLW  C8
01FE:  MOVWF  26
01FF:  CALL   018
0200:  MOVF   21,W
0201:  MOVWF  27
0202:  MOVF   20,W
0203:  MOVWF  26
0204:  CLRF   29
0205:  MOVLW  0A
0206:  MOVWF  28
0207:  CALL   12D
0208:  MOVF   79,W
0209:  MOVWF  27
020A:  MOVF   78,W
020B:  MOVWF  26
020C:  MOVLW  30
020D:  ADDWF  26,F
020E:  BTFSC  03.0
020F:  INCF   27,F
0210:  MOVF   26,W
0211:  MOVWF  28
0212:  CALL   049
....................             lcd_command(0xCF);lcd_data(i%10 + 0x30);
0213:  MOVLW  CF
0214:  MOVWF  26
0215:  CALL   018
0216:  MOVF   21,W
0217:  MOVWF  27
0218:  MOVF   20,W
0219:  MOVWF  26
021A:  CLRF   29
021B:  MOVLW  0A
021C:  MOVWF  28
021D:  CALL   12D
021E:  MOVF   77,W
021F:  MOVWF  26
0220:  MOVF   7A,W
0221:  MOVWF  27
0222:  MOVLW  30
0223:  ADDWF  26,F
0224:  BTFSC  03.0
0225:  INCF   27,F
0226:  MOVF   26,W
0227:  MOVWF  28
0228:  CALL   049
....................             if (i==0)
0229:  MOVF   20,F
022A:  BTFSS  03.2
022B:  GOTO   233
022C:  MOVF   21,F
022D:  BTFSS  03.2
022E:  GOTO   233
....................                {i=1000;}
022F:  MOVLW  03
0230:  MOVWF  21
0231:  MOVLW  E8
0232:  MOVWF  20
....................             if (!input(pin_a0))
0233:  BSF    03.5
0234:  BSF    05.0
0235:  BCF    03.5
0236:  BTFSC  05.0
0237:  GOTO   23F
....................                {
....................                temp=1;
0238:  CLRF   23
0239:  MOVLW  01
023A:  MOVWF  22
....................                count=i;
023B:  MOVF   21,W
023C:  MOVWF  25
023D:  MOVF   20,W
023E:  MOVWF  24
....................                }
....................             delay_ms(100);
023F:  MOVLW  64
0240:  MOVWF  29
0241:  CALL   004
0242:  MOVF   20,W
0243:  BTFSC  03.2
0244:  DECF   21,F
0245:  DECF   20,F
0246:  GOTO   1DA
....................          }
0247:  BCF    0A.3
0248:  BCF    0A.4
0249:  GOTO   281 (RETURN)
....................    }
.................... 
....................    
.................... void main()
024A:  MOVF   03,W
024B:  ANDLW  1F
024C:  MOVWF  03
024D:  CLRF   23
024E:  MOVLW  01
024F:  MOVWF  22
0250:  CLRF   25
0251:  CLRF   24
0252:  BSF    03.5
0253:  BSF    03.6
0254:  MOVF   09,W
0255:  ANDLW  C0
0256:  MOVWF  09
0257:  BCF    03.6
0258:  BCF    1F.4
0259:  BCF    1F.5
025A:  MOVLW  00
025B:  BSF    03.6
025C:  MOVWF  08
025D:  BCF    03.5
025E:  CLRF   07
025F:  CLRF   08
0260:  CLRF   09
0261:  BCF    03.7
....................    {  
....................       set_tris_d(0x00);
0262:  MOVLW  00
0263:  BSF    03.5
0264:  BCF    03.6
0265:  MOVWF  08
....................       set_tris_a(0xFF);
0266:  MOVLW  FF
0267:  MOVWF  05
....................       set_tris_e(0xFF);
0268:  BSF    09.0
0269:  BSF    09.1
026A:  BSF    09.2
026B:  BSF    09.3
....................       lcd_setup();
026C:  BCF    03.5
026D:  GOTO   031
....................       while (true)
....................          {
....................             if (temp==1)
026E:  DECFSZ 22,W
026F:  GOTO   273
0270:  MOVF   23,F
0271:  BTFSC  03.2
....................                {mode1();}
0272:  GOTO   062
....................             if (temp==2)
0273:  MOVF   22,W
0274:  SUBLW  02
0275:  BTFSS  03.2
0276:  GOTO   27A
0277:  MOVF   23,F
0278:  BTFSC  03.2
....................                {mode2();}
0279:  GOTO   152
....................             if (temp==3)
027A:  MOVF   22,W
027B:  SUBLW  03
027C:  BTFSS  03.2
027D:  GOTO   281
027E:  MOVF   23,F
027F:  BTFSC  03.2
....................                {mode3();}
0280:  GOTO   1CD
0281:  GOTO   26E
....................          }
....................     }
....................       
0282:  SLEEP
....................       
....................       
....................    
.................... 
....................       

Configuration Fuses:
   Word  1: 2FE2   HS NOWDT PUT MCLR NOPROTECT NOCPD BROWNOUT IESO FCMEN NOLVP NODEBUG
   Word  2: 3FFF   BORV40 NOWRT
